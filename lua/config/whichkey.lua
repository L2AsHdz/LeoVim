local ok, which = pcall(require, 'which-key')
if not ok then
    return
end

which.setup({
    window = {
        border = 'single',
    },
})

which.register({
    ['['] = {
        c = 'Prev Class Start',
        C = 'Prev Class End',
        d = 'Prev Diagnostic',
        f = 'Prev Function Start',
        F = 'Prev Function End',
        w = 'Prev Word',
    },
    [']'] = {
        c = 'Next Class Start',
        C = 'Next Class End',
        d = 'Next Diagnostic',
        f = 'Next Function Start',
        F = 'Next Function End',
        w = 'Next Word',
    },
    ['<leader>'] = {
        ['/'] = 'Hop Pattern',
        ['<space>'] = 'Show Cursor Position',
        b = {
            name = 'Buffer',
            b = 'Sayonara',
            c = 'Buffer Pick Close',
            j = 'Move Buffer Left',
            k = 'Move Buffer Right',
            p = 'Buffer Pick',
            o = 'Close everything else',
            w = 'Save File',
            W = 'Save and Quit',
        },
        c = {
            name = 'LSP and Sniprun',
            a = 'CodeAction',
            c = 'Function Definition Code',
            C = 'SnipClose',
            d = 'Code Diagnostics',
            D = 'Document Diagnostics',
            f = 'Format Code',
            i = 'Class Definition Code',
            r = 'SnipRun',
            R = 'SnipReset',
            w = 'Workspace Diagnostics',
        },
        d = {
            name = 'DiffView and CommentBox',
            b = 'Draw Comment Box',
            h = 'Open Diff File History',
            f = 'Toggle Diffview Files',
            l = 'Draw Comment Line',
            q = 'Quit DiffView',
            r = 'Refresh DiffView',
            v = 'Open DiffView',
        },
        f = {
            name = 'Find',
            -- c = 'Flutter Commands',
            -- d = 'Flutter Devices',
            -- e = 'Flutter Emulators',
            -- l = 'Flutter Outline Toggle',
            -- q = 'Flutter Quit',
            -- R = 'Flutter Reload',
            -- r = 'Flutter run',
            -- t = 'Flutter Restart',
            b = 'Find Open Buffers',
            f = 'Find Files',
            F = 'Find Files (with dotfiles)',
            g = 'Find Text',
            h = 'Find Help',
            i = 'Find Builtin Options',
            n = 'Find Clipboard',
            N = 'Notification History',
            o = 'Find Recent Files',
            p = 'Find Plugins',
            v = 'Find Files Preview',
        },
        g = {
            name = 'Git',
            a = 'Stage Hunk',
            b = 'Stage File',
            B = 'Reset Buffer',
            g = 'Refresh GitSigns',
            G = 'Attach GitSigns',
            h = 'Preview Hunk',
            m = 'Show Commit',
            n = 'Next Hunk',
            p = 'Prev Hunk',
            r = 'Reset Hunk',
            s = 'Git Status',
            u = 'Undo Stage Hunk',
        },
        h = {
            name = 'Hop',
            c = 'Jump Char 2',
            C = 'Jump Char 1',
            l = 'Jump Line Start',
            L = 'Jump Line',
            w = 'Jump Word',
        },
        l = {
            name = 'Symbols Outline',
            l = 'Open Symbols Outline',
        },
        m = {
            name = 'Move Tab',
            m = 'Markdown Preview',
        },
        n = {
            name = 'NvimTree and Hlslens',
            f = 'Find File NvimTree',
            h = 'Clean Highlights Search',
            n = 'Hlslens Next',
            N = 'Hlslens Prev',
            r = 'Refresh NvimTree',
            t = 'Open NvimTree',
        },
        p = {
            name = 'Packer',
            c = 'Packer Compile',
            d = 'Packer Clean',
            i = 'Packer Install',
            s = 'Packer Sync',
            t = 'Packer Status',
            u = 'Packer Update',
        },
        q = {
            name = 'Quit',
            f = 'Force Quit',
            q = 'Quit NeoVim',
            w = 'Quit windows',
        },
        r = {
            name = 'Runner, RestNvim and more',
            c = 'Run Code',
            C = 'Run Close',
            f = 'Run File',
            g = 'Open Ranger',
            j = 'Run Project',
            l = 'Run Last Rest',
            n = 'Lsp Rename',
            p = 'Run Preview Rest',
            r = 'Run Rest',
            s = 'Open Spectre',
            w = 'Open Spectre Word',
        },
        s = {
            name = 'Sessions and SearchBox',
            ['.'] = 'Open SearchBox Word',
            ['/'] = 'Open SearchBox',
            ['?'] = 'Open SearchBox Reverse',
            d = 'Delete Session',
            f = 'Search in DevDocs',
            g = 'Search in Google',
            l = 'Load Session',
            n = 'Swap Next Parameter',
            p = 'Swap Prev Parameter',
            r = 'Open SearchBox Replace Word',
            R = 'Open SearchBox Replace',
            s = 'Save Session',
        },
        t = {
            name = 'TodoComments',
            b = 'Open TODO en Trouble',
            q = 'Open TODO en QuickFix',
            t = 'Open TODO en Telescope',
        },
        w = {
            name = 'Window',
            h = 'Split Horizontal',
            m = 'Move mode',
            p = 'Window Picker',
            r = 'Resize Mode',
            s = 'Swap window',
            v = 'Split Vertical',
            w = 'Max Or Equal',
        },
        y = 'Copy All',
    },
})
